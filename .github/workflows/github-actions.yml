name: Waynes Terraform CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Set to true to destroy infrastructure'
        required: false
        default: 'false'
        type: string

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy != 'true'
    strategy:
      matrix:
        environment: [dev, prod]

    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.4

    - name: Get environment location
      run: echo "/environments/${{ matrix.environment }}/*"

    - name: ssh
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: "${{ secrets.SSH_PRIVATE_KEY }}"

    - name: Terraform Init
      working-directory: ./
      run: terraform init -backend-config=./environments/${{ matrix.environment }}/backend.conf

    - name: Terraform Plan
      if: github.ref != 'refs/heads/main'
      working-directory: ./
      run: terraform plan -var-file=./environments/${{ matrix.environment }}/terraform.tfvars -out=plan.out

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./
      run: terraform apply -var-file=./environments/${{ matrix.environment }}/terraform.tfvars -auto-approve

  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true' && github.ref == 'refs/heads/main'

    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.4

    - name: ssh
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: "${{ secrets.SSH_PRIVATE_KEY }}"

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
